#!/usr/bin/python3.5
# coding=utf-8

import logging
import gevent
import argparse
import sys

from yaml import safe_load, load, dump
try:
    from yaml import CLoader as Loader, CDumper as Dumper
except ImportError:
    from yaml import Loader, Dumper


from exchange.app import Web


# logger = logging.getLogger(__name__)


class WebLauncher:
    def __init__(self, debug, config):
        configs = self.load(config)
        log_name = configs.get('nso').get('id')
        self.logs(log_name, debug)
        self.web = Web(configs)

    def logs(self, logger_name, debug):
        level = logging.DEBUG if debug else logging.INFO
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler = logging.StreamHandler()
        handler.setFormatter(formatter)
        handler.setLevel(level)
        logging.getLogger().addHandler(handler)
        logging.getLogger().setLevel(level)
        logger = logging.getLogger(logger_name)
        # logger.update(dict(name=logger_name))
        logger.info('sys_version %s', sys.version_info)

    def start(self):
        jobs = []
        jobs.extend(self.web.get_jobs())
        gevent.joinall(jobs)

    def load(self, filepath):
        data = {}
        try:
            with open(filepath, 'r') as f:
                data = load(f, Loader=Loader)
        except Exception as e:
            logger.debug('exception: could not load sketch file %s', e)
        finally:
            return data


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='exchange platform')

    parser.add_argument('--configs',
        dest='configs',
        type=str,
        default='',
        help='Input configuration file (default: %(default)s)')

    parser.add_argument('--debug',
        dest='debug',
        type=bool,
        required=False,
        default=False,
        help='Enable debug mode (default: %(default)s)')

    cli_args = parser.parse_args(sys.argv[1:])
    web = WebLauncher(cli_args.debug, cli_args.configs)
    web.start()

